{
	"id": "ad8d9a8dde440b473a0fca41376fe909",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"decision-making.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\r\n\r\n/* \r\nWhile writing a program, there may be a situation when you need to adopt one out of a given set of paths. \r\nIn such cases, you need to use conditional statements that allow your program to make correct decisions and perform right actions.\r\n\r\nif statement: The if statement is the fundamental control statement that allows \r\nSolidity to make decisions and execute statements conditionally.\r\n\r\nif...else statement: The 'if...else' statement is the next form of control statement that allows \r\nSolidity to execute statements in a more controlled way.\r\n*/\r\n\r\ncontract DecisionMaking {\r\n    \r\n// if the user has the right password then let the user in !\r\n// if the user has the wrong password don't let them in! \r\n\r\n// if the user has the right password let them in else (otherwise) don't!\r\n\r\nuint oranges = 4; // one equal sign (=) assigns value whereas two equal signs (==) equivalates values\r\n\r\nfunction validateOranges() public view returns (bool) {\r\n    if(oranges == 5) // whatever goes in the paranthesese evaluates the trueness \r\n    \r\n    // curly brackets are for the statement of the if - curly brackets means then\r\n    {\r\n       return true; \r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\n// Exercise in DeFi! :)\r\n// 1. Create a stakingWallet variable as an integer and set it to the value of 10\r\n// 2. Write a function called airDrop which has public visibility, is IDE viewable and returns an integer\r\n// 3. create decision making logic so that if the wallet has a value of 10 then add to the wallet 10 more\r\n// 4. add an else statement so that if the wallet does not equal the value of 10 to add only 1 more\r\n// 4. return the value of the wallet \r\n// 5. deploy the contract the test the results - try changing the value of the wallet to 6 and redeploying for varying results\r\n\r\nuint stakingWallet = 10;\r\n\r\nfunction airDrop() public view returns(uint){\r\n\r\n    if (stakingWallet == 10){\r\n\r\n        stakingWallet + 10;\r\n\r\n    } else {\r\n\r\n        stakingWallet + 1;\r\n\r\n    }\r\n\r\n}\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"decision-making.sol": {
				"DecisionMaking": {
					"abi": [
						{
							"inputs": [],
							"name": "airDrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "validateOranges",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"decision-making.sol\":597:2035  contract DecisionMaking {\r... */\n  mstore(0x40, 0x80)\n    /* \"decision-making.sol\":845:846  4 */\n  0x04\n    /* \"decision-making.sol\":830:846  uint oranges = 4 */\n  0x00\n  sstore\n    /* \"decision-making.sol\":1854:1856  10 */\n  0x0a\n    /* \"decision-making.sol\":1833:1856  uint stakingWallet = 10 */\n  0x01\n  sstore\n    /* \"decision-making.sol\":597:2035  contract DecisionMaking {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"decision-making.sol\":597:2035  contract DecisionMaking {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb4a4fad8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xca5d0880\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"decision-making.sol\":935:1237  function validateOranges() public view returns (bool) {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"decision-making.sol\":1861:2030  function airDrop() public view returns(uint){\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"decision-making.sol\":935:1237  function validateOranges() public view returns (bool) {\r... */\n    tag_6:\n        /* \"decision-making.sol\":983:987  bool */\n      0x00\n        /* \"decision-making.sol\":1010:1011  5 */\n      0x05\n        /* \"decision-making.sol\":999:1006  oranges */\n      sload(0x00)\n        /* \"decision-making.sol\":999:1011  oranges == 5 */\n      eq\n        /* \"decision-making.sol\":996:1234  if(oranges == 5) // whatever goes in the paranthesese evaluates the trueness \r... */\n      iszero\n      tag_14\n      jumpi\n        /* \"decision-making.sol\":1185:1189  true */\n      0x01\n        /* \"decision-making.sol\":1178:1189  return true */\n      swap1\n      pop\n      jump(tag_13)\n        /* \"decision-making.sol\":996:1234  if(oranges == 5) // whatever goes in the paranthesese evaluates the trueness \r... */\n    tag_14:\n        /* \"decision-making.sol\":1222:1226  true */\n      0x01\n        /* \"decision-making.sol\":1215:1226  return true */\n      swap1\n      pop\n        /* \"decision-making.sol\":935:1237  function validateOranges() public view returns (bool) {\r... */\n    tag_13:\n      swap1\n      jump\t// out\n        /* \"decision-making.sol\":1861:2030  function airDrop() public view returns(uint){\r... */\n    tag_10:\n        /* \"decision-making.sol\":1900:1904  uint */\n      0x00\n        /* \"decision-making.sol\":1935:1937  10 */\n      0x0a\n        /* \"decision-making.sol\":1918:1931  stakingWallet */\n      sload(0x01)\n        /* \"decision-making.sol\":1918:1937  stakingWallet == 10 */\n      eq\n        /* \"decision-making.sol\":1914:2025  if (stakingWallet == 10){\r... */\n      iszero\n      tag_17\n      jumpi\n        /* \"decision-making.sol\":1967:1969  10 */\n      0x0a\n        /* \"decision-making.sol\":1951:1964  stakingWallet */\n      sload(0x01)\n        /* \"decision-making.sol\":1951:1969  stakingWallet + 10 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      pop\n        /* \"decision-making.sol\":1914:2025  if (stakingWallet == 10){\r... */\n      jump(tag_20)\n    tag_17:\n        /* \"decision-making.sol\":2014:2015  1 */\n      0x01\n        /* \"decision-making.sol\":1998:2011  stakingWallet */\n      dup1\n      sload\n        /* \"decision-making.sol\":1998:2015  stakingWallet + 1 */\n      tag_21\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_21:\n      pop\n        /* \"decision-making.sol\":1914:2025  if (stakingWallet == 10){\r... */\n    tag_20:\n        /* \"decision-making.sol\":1861:2030  function airDrop() public view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_23:\n        /* \"#utility.yul\":88:109   */\n      tag_25\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:240   */\n    tag_27:\n        /* \"#utility.yul\":209:233   */\n      tag_29\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":209:233   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":204:207   */\n      dup3\n        /* \"#utility.yul\":197:234   */\n      mstore\n        /* \"#utility.yul\":122:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:456   */\n    tag_8:\n        /* \"#utility.yul\":333:337   */\n      0x00\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup3\n        /* \"#utility.yul\":356:374   */\n      add\n        /* \"#utility.yul\":348:374   */\n      swap1\n      pop\n        /* \"#utility.yul\":384:449   */\n      tag_32\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":435:444   */\n      dup4\n        /* \"#utility.yul\":431:448   */\n      add\n        /* \"#utility.yul\":422:428   */\n      dup5\n        /* \"#utility.yul\":384:449   */\n      tag_23\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":246:456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":462:684   */\n    tag_12:\n        /* \"#utility.yul\":555:559   */\n      0x00\n        /* \"#utility.yul\":593:595   */\n      0x20\n        /* \"#utility.yul\":582:591   */\n      dup3\n        /* \"#utility.yul\":578:596   */\n      add\n        /* \"#utility.yul\":570:596   */\n      swap1\n      pop\n        /* \"#utility.yul\":606:677   */\n      tag_34\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":663:672   */\n      dup4\n        /* \"#utility.yul\":659:676   */\n      add\n        /* \"#utility.yul\":650:656   */\n      dup5\n        /* \"#utility.yul\":606:677   */\n      tag_27\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":462:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:995   */\n    tag_19:\n        /* \"#utility.yul\":730:733   */\n      0x00\n        /* \"#utility.yul\":749:769   */\n      tag_36\n        /* \"#utility.yul\":767:768   */\n      dup3\n        /* \"#utility.yul\":749:769   */\n      tag_30\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":744:769   */\n      swap2\n      pop\n        /* \"#utility.yul\":783:803   */\n      tag_37\n        /* \"#utility.yul\":801:802   */\n      dup4\n        /* \"#utility.yul\":783:803   */\n      tag_30\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":778:803   */\n      swap3\n      pop\n        /* \"#utility.yul\":937:938   */\n      dup3\n        /* \"#utility.yul\":869:935   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":865:939   */\n      sub\n        /* \"#utility.yul\":862:863   */\n      dup3\n        /* \"#utility.yul\":859:940   */\n      gt\n        /* \"#utility.yul\":856:963   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":943:961   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":856:963   */\n    tag_38:\n        /* \"#utility.yul\":987:988   */\n      dup3\n        /* \"#utility.yul\":984:985   */\n      dup3\n        /* \"#utility.yul\":980:989   */\n      add\n        /* \"#utility.yul\":973:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_26:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1174   */\n    tag_30:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1163:1168   */\n      dup2\n        /* \"#utility.yul\":1152:1168   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1360   */\n    tag_40:\n        /* \"#utility.yul\":1228:1305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1225:1226   */\n      0x00\n        /* \"#utility.yul\":1218:1306   */\n      mstore\n        /* \"#utility.yul\":1325:1329   */\n      0x11\n        /* \"#utility.yul\":1322:1323   */\n      0x04\n        /* \"#utility.yul\":1315:1330   */\n      mstore\n        /* \"#utility.yul\":1349:1353   */\n      0x24\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1339:1354   */\n      revert\n\n    auxdata: 0xa2646970667358221220923f8f99da832ce83258545331714c34fdf277e16e33503cc7bfa77fb0e76da064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526004600055600a60015534801561001a57600080fd5b506101ef8061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b4a4fad81461003b578063ca5d088014610059575b600080fd5b610043610077565b60405161005091906100e8565b60405180910390f35b610061610095565b60405161006e9190610103565b60405180910390f35b60006005600054141561008d5760019050610092565b600190505b90565b6000600a60015414156100b757600a6001546100b1919061011e565b506100c7565b600180546100c5919061011e565b505b90565b6100d381610174565b82525050565b6100e281610180565b82525050565b60006020820190506100fd60008301846100ca565b92915050565b600060208201905061011860008301846100d9565b92915050565b600061012982610180565b915061013483610180565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101695761016861018a565b5b828201905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220923f8f99da832ce83258545331714c34fdf277e16e33503cc7bfa77fb0e76da064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 PUSH1 0x0 SSTORE PUSH1 0xA PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4A4FAD8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCA5D0880 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x8D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x92 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB7 JUMPI PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE2 DUP2 PUSH2 0x180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129 DUP3 PUSH2 0x180 JUMP JUMPDEST SWAP2 POP PUSH2 0x134 DUP4 PUSH2 0x180 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0x18A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 EXTCODEHASH DUP16 SWAP10 0xDA DUP4 0x2C 0xE8 ORIGIN PC SLOAD MSTORE8 BALANCE PUSH18 0x4C34FDF277E16E33503CC7BFA77FB0E76DA0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "597:1438:0:-:0;;;845:1;830:16;;1854:2;1833:23;;597:1438;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@airDrop_43": {
									"entryPoint": 149,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@validateOranges_20": {
									"entryPoint": 119,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1363:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "187:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "209:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "182:3:1",
														"type": ""
													}
												],
												"src": "122:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "338:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "348:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "356:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "348:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "422:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "446:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "431:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "384:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "384:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "322:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "333:4:1",
														"type": ""
													}
												],
												"src": "246:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "570:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "582:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "593:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "570:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "674:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "606:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "606:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "544:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "555:4:1",
														"type": ""
													}
												],
												"src": "462:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "734:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "744:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "767:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "749:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "744:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "778:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "801:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "783:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "778:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "941:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "943:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "943:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "943:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "862:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "869:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "937:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "859:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:81:1"
															},
															"nodeType": "YulIf",
															"src": "856:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "973:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "984:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "987:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "973:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "721:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "724:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "730:3:1",
														"type": ""
													}
												],
												"src": "690:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:1",
														"type": ""
													}
												],
												"src": "1001:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1163:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:1",
														"type": ""
													}
												],
												"src": "1097:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1208:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1225:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1228:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1349:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1339:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1180:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b4a4fad81461003b578063ca5d088014610059575b600080fd5b610043610077565b60405161005091906100e8565b60405180910390f35b610061610095565b60405161006e9190610103565b60405180910390f35b60006005600054141561008d5760019050610092565b600190505b90565b6000600a60015414156100b757600a6001546100b1919061011e565b506100c7565b600180546100c5919061011e565b505b90565b6100d381610174565b82525050565b6100e281610180565b82525050565b60006020820190506100fd60008301846100ca565b92915050565b600060208201905061011860008301846100d9565b92915050565b600061012982610180565b915061013483610180565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101695761016861018a565b5b828201905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220923f8f99da832ce83258545331714c34fdf277e16e33503cc7bfa77fb0e76da064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4A4FAD8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCA5D0880 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x8D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x92 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB7 JUMPI PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE2 DUP2 PUSH2 0x180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129 DUP3 PUSH2 0x180 JUMP JUMPDEST SWAP2 POP PUSH2 0x134 DUP4 PUSH2 0x180 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0x18A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 EXTCODEHASH DUP16 SWAP10 0xDA DUP4 0x2C 0xE8 ORIGIN PC SLOAD MSTORE8 BALANCE PUSH18 0x4C34FDF277E16E33503CC7BFA77FB0E76DA0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "597:1438:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:302;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1861:169;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:302;983:4;1010:1;999:7;;:12;996:238;;;1185:4;1178:11;;;;996:238;1222:4;1215:11;;935:302;;:::o;1861:169::-;1900:4;1935:2;1918:13;;:19;1914:111;;;1967:2;1951:13;;:18;;;;:::i;:::-;;1914:111;;;2014:1;1998:13;;:17;;;;:::i;:::-;;1914:111;1861:169;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:118::-;209:24;227:5;209:24;:::i;:::-;204:3;197:37;122:118;;:::o;246:210::-;333:4;371:2;360:9;356:18;348:26;;384:65;446:1;435:9;431:17;422:6;384:65;:::i;:::-;246:210;;;;:::o;462:222::-;555:4;593:2;582:9;578:18;570:26;;606:71;674:1;663:9;659:17;650:6;606:71;:::i;:::-;462:222;;;;:::o;690:305::-;730:3;749:20;767:1;749:20;:::i;:::-;744:25;;783:20;801:1;783:20;:::i;:::-;778:25;;937:1;869:66;865:74;862:1;859:81;856:107;;;943:18;;:::i;:::-;856:107;987:1;984;980:9;973:16;;690:305;;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:77::-;1134:7;1163:5;1152:16;;1097:77;;;:::o;1180:180::-;1228:77;1225:1;1218:88;1325:4;1322:1;1315:15;1349:4;1346:1;1339:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "99000",
								"executionCost": "44359",
								"totalCost": "143359"
							},
							"external": {
								"airDrop()": "infinite",
								"validateOranges()": "2458"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 845,
									"end": 846,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 830,
									"end": 846,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 846,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 2035,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220923f8f99da832ce83258545331714c34fdf277e16e33503cc7bfa77fb0e76da064736f6c63430008070033",
									".code": [
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "B4A4FAD8"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "CA5D0880"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 999,
											"end": 1006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 996,
											"end": 1234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1234,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 996,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 1237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1918,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1918,
											"end": 1931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1951,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1998,
											"end": 2011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2030,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 197,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 356,
											"end": 374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 348,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 431,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 384,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 462,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 578,
											"end": 596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 672,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 659,
											"end": 676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 650,
											"end": 656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 606,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 606,
											"end": 677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 606,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 462,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 462,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 462,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 690,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 767,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 749,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 749,
											"end": 769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 769,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 749,
											"end": 769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 783,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 783,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 778,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 937,
											"end": 938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 869,
											"end": 935,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 856,
											"end": 963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 856,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 984,
											"end": 985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 973,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1180,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1305,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airDrop()": "ca5d0880",
							"validateOranges()": "b4a4fad8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airDrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validateOranges\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"decision-making.sol\":\"DecisionMaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"decision-making.sol\":{\"keccak256\":\"0x487d5c95652a79345cb8801df193f6ae3b6b0029e4ce5e5ef0a69e4c6a01a9b9\",\"urls\":[\"bzz-raw://ed65d87c487dff80af9ab2abcd24530c9dddf99a88c2e75a9bfe75b7a60e5d8d\",\"dweb:/ipfs/QmeDEvVkoH6rXicD3uwihvbWY12P7DFXq5qdimfPMcrsQT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "decision-making.sol:DecisionMaking",
								"label": "oranges",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "decision-making.sol:DecisionMaking",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> decision-making.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "decision-making.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> decision-making.sol:44:40:\n   |\n44 | function airDrop() public view returns(uint){\n   |                                        ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1904,
					"file": "decision-making.sol",
					"start": 1900
				},
				"type": "Warning"
			}
		],
		"sources": {
			"decision-making.sol": {
				"ast": {
					"absolutePath": "decision-making.sol",
					"exportedSymbols": {
						"DecisionMaking": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "DecisionMaking",
							"nameLocation": "606:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "oranges",
									"nameLocation": "835:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "830:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "830:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "845:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "989:248:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 9,
														"name": "oranges",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1010:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "999:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 17,
													"nodeType": "Block",
													"src": "1204:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1222:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 8,
															"id": 16,
															"nodeType": "Return",
															"src": "1215:11:0"
														}
													]
												},
												"id": 18,
												"nodeType": "IfStatement",
												"src": "996:238:0",
												"trueBody": {
													"id": 14,
													"nodeType": "Block",
													"src": "1168:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1185:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 8,
															"id": 13,
															"nodeType": "Return",
															"src": "1178:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b4a4fad8",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateOranges",
									"nameLocation": "944:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "983:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:6:0"
									},
									"scope": 44,
									"src": "935:302:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "1838:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "1833:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1833:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1854:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1905:125:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1918:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1935:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1918:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 40,
													"nodeType": "Block",
													"src": "1985:40:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 36,
																	"name": "stakingWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1998:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2014:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1998:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 39,
															"nodeType": "ExpressionStatement",
															"src": "1998:17:0"
														}
													]
												},
												"id": 41,
												"nodeType": "IfStatement",
												"src": "1914:111:0",
												"trueBody": {
													"id": 35,
													"nodeType": "Block",
													"src": "1938:41:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 31,
																	"name": "stakingWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1951:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1967:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1951:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "1951:18:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ca5d0880",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airDrop",
									"nameLocation": "1870:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1900:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:0"
									},
									"scope": 44,
									"src": "1861:169:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 45,
							"src": "597:1438:0",
							"usedErrors": []
						}
					],
					"src": "0:2035:0"
				},
				"id": 0
			}
		}
	}
}